name: "Python Test"
description: "Python Test Template"
inputs:
  py:
    required: true
    description: "Target Python Version"
  os:
    required: true
    description: "Target Operating System"
env:
  MALSHARE_API: ${{ secrets.MALSHARE_API }}
runs:
  using: "composite"
  steps:
    - name: Debug Logging
      run: |
        echo "event  = ${{ github.event_name }}"
        echo "action = ${{ github.event.action }}"
    - name: Checkout Main Repository
      uses: actions/checkout@v4
      if: ${{ github.event_name != 'pull_request' && github.event_name != 'pull_request_target' }}
    - name: Clone PR Source Repository
      uses: actions/checkout@v4
      if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.ref }}
        repository: ${{ github.event.pull_request.head.repo.full_name }}
    - name: Set up Python ${{ inputs.py }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.py }}
    - name: Install Dependencies (Linux)
      if: ${{ contains(inputs.os, 'ubuntu') }}
      run: |
        sudo apt-get install xclip xvfb
    - name: MacOS-specific dependencies
      if: ${{ contains(inputs.os, 'macos') }}
      run: |
        brew install libmagic
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pycodestyle
        pip install .[all]
    - name: Unit Tests
      if: ${{ !contains(inputs.os, 'ubuntu') }}
      run: |
        python -m unittest discover -p test_*.py
    - name: Unit Tests
      if: ${{  contains(inputs.os, 'ubuntu') }}
      run: |
        XDG_SESSION_TYPE=x11 xvfb-run python -m unittest discover -p test_*.py
